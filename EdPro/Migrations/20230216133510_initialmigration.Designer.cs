// <auto-generated />
using System;
using EdPro.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EdPro.Migrations
{
    [DbContext(typeof(EdProContext))]
    [Migration("20230216133510_initialmigration")]
    partial class initialmigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EdPro.Models.Competence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Competence1")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Competence");

                    b.Property<int>("CompetenceTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompetenceTypeId");

                    b.ToTable("Competences");
                });

            modelBuilder.Entity("EdPro.Models.CompetencesType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CompType")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.ToTable("CompetencesTypes");
                });

            modelBuilder.Entity("EdPro.Models.ControlType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ControlTypeName")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.HasKey("Id");

                    b.ToTable("ControlTypes");
                });

            modelBuilder.Entity("EdPro.Models.EdProgramType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("EdProgramTypes");
                });

            modelBuilder.Entity("EdPro.Models.EducationProgram", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("EdPrTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Edbo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nchar(20)")
                        .HasColumnName("EDBO")
                        .IsFixedLength();

                    b.Property<int>("FacultyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ImplementationDate")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("SpecialityId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EdPrTypeId");

                    b.HasIndex("FacultyId");

                    b.HasIndex("SpecialityId");

                    b.ToTable("EducationPrograms");
                });

            modelBuilder.Entity("EdPro.Models.EpSubjectCompetence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("SpecialityCompetenceId")
                        .HasColumnType("int");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SpecialityCompetenceId");

                    b.HasIndex("SubjectId");

                    b.ToTable("EpSubjectCompetences");
                });

            modelBuilder.Entity("EdPro.Models.EpSubjectLoutcome", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("LearningOutcomeId")
                        .HasColumnType("int");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LearningOutcomeId");

                    b.HasIndex("SubjectId");

                    b.ToTable("EpSubjectLOutcomes", (string)null);
                });

            modelBuilder.Entity("EdPro.Models.Faculty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("UniversityId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UniversityId");

                    b.ToTable("Faculties");
                });

            modelBuilder.Entity("EdPro.Models.LearningOutcome", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("LearningOutcome1")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("LearningOutcome");

                    b.Property<string>("Loname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LOname");

                    b.Property<int>("SpecialityId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SpecialityId");

                    b.ToTable("LearningOutcomes");
                });

            modelBuilder.Entity("EdPro.Models.Speciality", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Specialities");
                });

            modelBuilder.Entity("EdPro.Models.SpecialityCompetence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CompetenceId")
                        .HasColumnType("int");

                    b.Property<int>("SpecialityId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompetenceId");

                    b.HasIndex("SpecialityId");

                    b.ToTable("SpecialityCompetences");
                });

            modelBuilder.Entity("EdPro.Models.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ControlId")
                        .HasColumnType("int");

                    b.Property<int>("Credit")
                        .HasColumnType("int");

                    b.Property<int>("EprogramId")
                        .HasColumnType("int")
                        .HasColumnName("EProgramId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("ControlId");

                    b.HasIndex("EprogramId");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("EdPro.Models.University", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Edbo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nchar(20)")
                        .HasColumnName("EDBO")
                        .IsFixedLength();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Universities");
                });

            modelBuilder.Entity("EdPro.Models.Competence", b =>
                {
                    b.HasOne("EdPro.Models.CompetencesType", "CompetenceType")
                        .WithMany("Competences")
                        .HasForeignKey("CompetenceTypeId")
                        .IsRequired()
                        .HasConstraintName("FK_Competences_CompetencesTypes");

                    b.Navigation("CompetenceType");
                });

            modelBuilder.Entity("EdPro.Models.EducationProgram", b =>
                {
                    b.HasOne("EdPro.Models.EdProgramType", "EdPrType")
                        .WithMany("EducationPrograms")
                        .HasForeignKey("EdPrTypeId")
                        .IsRequired()
                        .HasConstraintName("FK_EducationPrograms_EdProgramTypes");

                    b.HasOne("EdPro.Models.Faculty", "Faculty")
                        .WithMany("EducationPrograms")
                        .HasForeignKey("FacultyId")
                        .IsRequired()
                        .HasConstraintName("FK_EducationPrograms_Faculties");

                    b.HasOne("EdPro.Models.Speciality", "Speciality")
                        .WithMany("EducationPrograms")
                        .HasForeignKey("SpecialityId")
                        .IsRequired()
                        .HasConstraintName("FK_EducationPrograms_Specialities");

                    b.Navigation("EdPrType");

                    b.Navigation("Faculty");

                    b.Navigation("Speciality");
                });

            modelBuilder.Entity("EdPro.Models.EpSubjectCompetence", b =>
                {
                    b.HasOne("EdPro.Models.SpecialityCompetence", "SpecialityCompetence")
                        .WithMany("EpSubjectCompetences")
                        .HasForeignKey("SpecialityCompetenceId")
                        .IsRequired()
                        .HasConstraintName("FK_EpSubjectCompetences_SpecialityCompetences");

                    b.HasOne("EdPro.Models.Subject", "Subject")
                        .WithMany("EpSubjectCompetences")
                        .HasForeignKey("SubjectId")
                        .IsRequired()
                        .HasConstraintName("FK_EpSubjectCompetences_Subjects");

                    b.Navigation("SpecialityCompetence");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("EdPro.Models.EpSubjectLoutcome", b =>
                {
                    b.HasOne("EdPro.Models.LearningOutcome", "LearningOutcome")
                        .WithMany("EpSubjectLoutcomes")
                        .HasForeignKey("LearningOutcomeId")
                        .IsRequired()
                        .HasConstraintName("FK_EpSubjectLOutcomes_LearningOutcomes");

                    b.HasOne("EdPro.Models.Subject", "Subject")
                        .WithMany("EpSubjectLoutcomes")
                        .HasForeignKey("SubjectId")
                        .IsRequired()
                        .HasConstraintName("FK_EpSubjectLOutcomes_Subjects");

                    b.Navigation("LearningOutcome");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("EdPro.Models.Faculty", b =>
                {
                    b.HasOne("EdPro.Models.University", "University")
                        .WithMany("Faculties")
                        .HasForeignKey("UniversityId")
                        .IsRequired()
                        .HasConstraintName("FK_Faculties_Universities");

                    b.Navigation("University");
                });

            modelBuilder.Entity("EdPro.Models.LearningOutcome", b =>
                {
                    b.HasOne("EdPro.Models.Speciality", "Speciality")
                        .WithMany("LearningOutcomes")
                        .HasForeignKey("SpecialityId")
                        .IsRequired()
                        .HasConstraintName("FK_LearningOutcomes_Specialities");

                    b.Navigation("Speciality");
                });

            modelBuilder.Entity("EdPro.Models.SpecialityCompetence", b =>
                {
                    b.HasOne("EdPro.Models.Competence", "Competence")
                        .WithMany("SpecialityCompetences")
                        .HasForeignKey("CompetenceId")
                        .IsRequired()
                        .HasConstraintName("FK_SpecialityCompetences_Competences");

                    b.HasOne("EdPro.Models.Speciality", "Speciality")
                        .WithMany("SpecialityCompetences")
                        .HasForeignKey("SpecialityId")
                        .IsRequired()
                        .HasConstraintName("FK_SpecialityCompetences_Specialities");

                    b.Navigation("Competence");

                    b.Navigation("Speciality");
                });

            modelBuilder.Entity("EdPro.Models.Subject", b =>
                {
                    b.HasOne("EdPro.Models.ControlType", "Control")
                        .WithMany("Subjects")
                        .HasForeignKey("ControlId")
                        .IsRequired()
                        .HasConstraintName("FK_Subjects_ControlTypes");

                    b.HasOne("EdPro.Models.EducationProgram", "Eprogram")
                        .WithMany("Subjects")
                        .HasForeignKey("EprogramId")
                        .IsRequired()
                        .HasConstraintName("FK_Subjects_EducationPrograms");

                    b.Navigation("Control");

                    b.Navigation("Eprogram");
                });

            modelBuilder.Entity("EdPro.Models.Competence", b =>
                {
                    b.Navigation("SpecialityCompetences");
                });

            modelBuilder.Entity("EdPro.Models.CompetencesType", b =>
                {
                    b.Navigation("Competences");
                });

            modelBuilder.Entity("EdPro.Models.ControlType", b =>
                {
                    b.Navigation("Subjects");
                });

            modelBuilder.Entity("EdPro.Models.EdProgramType", b =>
                {
                    b.Navigation("EducationPrograms");
                });

            modelBuilder.Entity("EdPro.Models.EducationProgram", b =>
                {
                    b.Navigation("Subjects");
                });

            modelBuilder.Entity("EdPro.Models.Faculty", b =>
                {
                    b.Navigation("EducationPrograms");
                });

            modelBuilder.Entity("EdPro.Models.LearningOutcome", b =>
                {
                    b.Navigation("EpSubjectLoutcomes");
                });

            modelBuilder.Entity("EdPro.Models.Speciality", b =>
                {
                    b.Navigation("EducationPrograms");

                    b.Navigation("LearningOutcomes");

                    b.Navigation("SpecialityCompetences");
                });

            modelBuilder.Entity("EdPro.Models.SpecialityCompetence", b =>
                {
                    b.Navigation("EpSubjectCompetences");
                });

            modelBuilder.Entity("EdPro.Models.Subject", b =>
                {
                    b.Navigation("EpSubjectCompetences");

                    b.Navigation("EpSubjectLoutcomes");
                });

            modelBuilder.Entity("EdPro.Models.University", b =>
                {
                    b.Navigation("Faculties");
                });
#pragma warning restore 612, 618
        }
    }
}
